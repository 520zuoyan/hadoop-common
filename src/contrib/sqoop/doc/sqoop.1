.\"     Title: sqoop
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 08/13/2009
.\"    Manual: 
.\"    Source: 
.\"
.TH "SQOOP" "1" "08/13/2009" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
sqoop \- SQL-to-Hadoop import tool
.SH "SYNOPSIS"
\fIsqoop\fR <options>
.sp
.SH "DESCRIPTION"
Sqoop is a tool designed to help users of large data import existing relational databases into their Hadoop clusters\&. Sqoop uses JDBC to connect to a database, examine each table\'s schema, and auto\-generate the necessary classes to import data into HDFS\&. It then instantiates a MapReduce job to read tables from the database via the DBInputFormat (JDBC\-based InputFormat)\&. Tables are read into a set of files loaded into HDFS\&. Both SequenceFile and text\-based targets are supported\&. Sqoop also supports high\-performance imports from select databases including MySQL\&.
.sp
.SH "OPTIONS"
The \-\-connect option is always required\&. To perform an import, one of \-\-table or \-\-all\-tables is required as well\&. Alternatively, you can specify \-\-generate\-only or one of the arguments in "Additional commands\&."
.sp
.SS "Database connection options"
.PP
\-\-connect (jdbc\-uri)
.RS 4
Specify JDBC connect string (required)
.RE
.PP
\-\-driver (class\-name)
.RS 4
Manually specify JDBC driver class to use
.RE
.PP
\-\-username (username)
.RS 4
Set authentication username
.RE
.PP
\-\-password (password)
.RS 4
Set authentication password (Note: This is very insecure\&. You should use \-P instead\&.)
.RE
.PP
\-P
.RS 4
Prompt for user password
.RE
.PP
\-\-direct
.RS 4
Use direct import fast path (mysql only)
.RE
.SS "Import control options"
.PP
\-\-all\-tables
.RS 4
Import all tables in database (Ignores
\-\-table,
\-\-columns,
\-\-order\-by, and
\-\-where)
.RE
.PP
\-\-columns (col,col,col\&...)
.RS 4
Columns to export from table
.RE
\-\-order\-by (column\-name) Column of the table used to order results
.PP
\-\-hadoop\-home (dir)
.RS 4
Override $HADOOP_HOME
.RE
.PP
\-\-hive\-home (dir)
.RS 4
Override $HIVE_HOME
.RE
.PP
\-\-warehouse\-dir (dir)
.RS 4
Tables are uploaded to the HDFS path
/warehouse/dir/(tablename)/
.RE
.PP
\-\-as\-sequencefile
.RS 4
Imports data to SequenceFiles
.RE
.PP
\-\-as\-textfile
.RS 4
Imports data as plain text (default)
.RE
.PP
\-\-hive\-import
.RS 4
If set, then import the table into Hive
.RE
.PP
\-\-table (table\-name)
.RS 4
The table to import
.RE
\-\-where (clause) Import only the rows for which \fIclause\fR is true\&. e\&.g\&.: \-\-where "user_id > 400 AND hidden == 0"
.sp
.SS "Output line formatting options"
The delimiters used to separate fields and records can be specified on the command line, as can a quoting character and an escape character (for quoting delimiters inside a values)\&. Data imported with \-\-as\-textfile will be formatted according to these parameters\&. Classes generated by Sqoop will encode this information, so using toString() from a data record stored \-\-as\-sequencefile will reproduce your specified formatting\&.
.sp
The (char) argument for each argument in this section can be specified either as a normal character (e\&.g\&., \-\-fields\-terminated\-by ,) or via an escape sequence\&. Arguments of the form \e0xhhh will be interpreted as a hexidecimal representation of a character with hex number \fIhhh\fR\&. Arguments of the form \e0ooo will be treated as an octal representation of a character represented by octal number \fIooo\fR\&. The special escapes \en, \er, \e", \eb, \et, and \e\e act as they do inside Java strings\&. \e0 will be treated as NUL\&. This will insert NUL characters between fields or lines (if used for \-\-fields\-terminated\-by or \-\-lines\-terminated\-by), or will disable enclosing/escaping if used for one of the \-\-enclosed\-by, \-\-optionally\-enclosed\-by, or \-\-escaped\-by arguments\&.
.sp
The default delimiters are , for fields, \en for records, no quote character, and no escape character\&. Note that this can lead to ambiguous/unparsible records if you import database records containing commas or newlines in the field data\&. For unambiguous parsing, both must be enabled, e\&.g\&., via \-\-mysql\-delimiters\&.
.PP
\-\-fields\-terminated\-by (char)
.RS 4
Sets the field separator character
.RE
.PP
\-\-lines\-terminated\-by (char)
.RS 4
Sets the end\-of\-line character
.RE
.PP
\-\-optionally\-enclosed\-by (char)
.RS 4
Sets a field\-enclosing character which may be used if a value contains delimiter characters\&.
.RE
.PP
\-\-enclosed\-by (char)
.RS 4
Sets a field\-enclosing character which will be used for all fields\&.
.RE
.PP
\-\-escaped\-by (char)
.RS 4
Sets the escape character
.RE
.PP
\-\-mysql\-delimiters
.RS 4
Uses MySQL\'s default delimiter set:
.sp
fields: , lines: \en escaped\-by: \e optionally\-enclosed\-by: \'
.RE
.SS "Input line parsing options"
Record classes generated by Sqoop include both a toString() method that formats output records, and a parse() method that interprets text based on an input delimiter set\&. The input delimiters default to the same ones chosen for output delimiters, but you can override these settings to support converting from one set of delimiters to another\&.
.PP
\-\-input\-fields\-terminated\-by (char)
.RS 4
Sets the input field separator
.RE
.PP
\-\-input\-lines\-terminated\-by (char)
.RS 4
Sets the input end\-of\-line char
.RE
.PP
\-\-input\-optionally\-enclosed\-by (char)
.RS 4
Sets an input field\-enclosing character
.RE
.PP
\-\-input\-enclosed\-by (char)
.RS 4
Sets a required input field encloser
.RE
.PP
\-\-input\-escaped\-by (char)
.RS 4
Sets the input escape character
.RE
.SS "Code generation options"
.PP
\-\-bindir (dir)
.RS 4
Output directory for compiled objects
.RE
.PP
\-\-class\-name (name)
.RS 4
Sets the name of the class to generate\&. By default, classes are named after the table they represent\&. Using this parameters ignores
\-\-package\-name\&.
.RE
.PP
\-\-generate\-only
.RS 4
Stop after code generation; do not import
.RE
.PP
\-\-outdir (dir)
.RS 4
Output directory for generated code
.RE
.PP
\-\-package\-name (package)
.RS 4
Puts auto\-generated classes in the named Java package
.RE
.SS "Additional commands"
These commands cause Sqoop to report information and exit; no import or code generation is performed\&.
.PP
\-\-debug\-sql (statement)
.RS 4
Execute
\fIstatement\fR
in SQL and display the results
.RE
.PP
\-\-help
.RS 4
Display usage information and exit
.RE
.PP
\-\-list\-databases
.RS 4
List all databases available and exit
.RE
.PP
\-\-list\-tables
.RS 4
List tables in database and exit
.RE
.SH "ENVIRONMENT"
.PP
JAVA_HOME
.RS 4
As part of its import process, Sqoop generates and compiles Java code by invoking the Java compiler
\fBjavac\fR(1)\&. As a result, JAVA_HOME must be set to the location of your JDK (note: This cannot just be a JRE)\&. e\&.g\&.,
/usr/java/default\&. Hadoop (and Sqoop) requires Sun Java 1\&.6 which can be downloaded from
\fIhttp://java\&.sun\&.com\fR\&.
.RE
.PP
HADOOP_HOME
.RS 4
The location of the Hadoop jar files\&. If you installed Hadoop via RPM or DEB, these are in
/usr/lib/hadoop\-20\&.
.RE
.PP
HIVE_HOME
.RS 4
If you are performing a Hive import, you must identify the location of Hive\'s jars and configuration\&. If you installed Hive via RPM or DEB, these are in
/usr/lib/hive\&.
.RE
.SH "TROUBLESHOOTING"
Sqoop\'s output is emitted via log4j, a logging system for Java that is used by other components of Hadoop\&. If Sqoop is failing to import your tables correctly, you can enable more verbose logging by adding the following line to /etc/hadoop/conf/log4j\&.properties:
.sp
.sp
.RS 4
.nf
log4j\&.logger\&.org\&.apache\&.hadoop\&.sqoop=DEBUG
.fi
.RE
If you continue to have trouble using Sqoop, drop us a line on our \fIcommunity support portal\fR\&[1] and we\'ll help you out\&.
.sp
.SH "SEE ALSO"
\fBhadoop\fR(1)
.sp
.SH "AUTHOR"
Written by Aaron Kimball <\fIaaron@cloudera\&.com\fR\&[2]>
.sp
.SH "NOTES"
.IP " 1." 4
community support portal
.RS 4
\%http://getsatisfaction.com/cloudera/products/cloudera_sqoop
.RE
.IP " 2." 4
aaron@cloudera.com
.RS 4
\%mailto:aaron@cloudera.com
.RE
